import { useState } from 'react';
import { Button } from '/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '/components/ui/card';
import { Input } from '/components/ui/input';
import { Textarea } from '/components/ui/textarea';
import { Label } from '/components/ui/label';

export default function CVPortfolio() {
  const [activeSection, setActiveSection] = useState('about');
  const [isEditing, setIsEditing] = useState(false);
  const [cvData, setCvData] = useState({
    name: 'Nguyễn Văn A',
    title: 'Full-stack Developer',
    email: 'nguyenvana@example.com',
    phone: '+84 123 456 789',
    location: 'Hà Nội, Việt Nam',
    summary: 'Lập trình viên với 5 năm kinh nghiệm phát triển ứng dụng web và mobile. Đam mê công nghệ và luôn học hỏi những kỹ thuật mới.',
    skills: ['JavaScript', 'React', 'Node.js', 'Python', 'MySQL', 'Git'],
    experience: [
      {
        company: 'Công ty công nghệ ABC',
        position: 'Senior Developer',
        period: '2022 - Hiện tại',
        description: 'Phát triển và duy trì hệ thống quản lý doanh nghiệp'
      },
      {
        company: 'Công ty phần mềm XYZ',
        position: 'Frontend Developer',
        period: '2019 - 2022',
        description: 'Xây dựng giao diện người dùng cho các ứng dụng web'
      }
    ],
    education: [
      {
        school: 'Đại học Bách Khoa Hà Nội',
        degree: 'Kỹ sư Công nghệ Thông tin',
        period: '2015 - 2019'
      }
    ]
  });

  const handleInputChange = (section: string, field: string, value: string) => {
    setCvData(prev => ({
      ...prev,
      [section]: field === 'skills' ? value.split(',') : value
    }));
  };

  const handleExperienceChange = (index: number, field: string, value: string) => {
    const updatedExperience = [...cvData.experience];
    updatedExperience[index] = { ...updatedExperience[index], [field]: value };
    setCvData(prev => ({ ...prev, experience: updatedExperience }));
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="container mx-auto px-4 py-6">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-center md:text-left mb-4 md:mb-0">
              <h1 className="text-3xl font-bold text-gray-900">{cvData.name}</h1>
              <p className="text-lg text-blue-600 mt-1">{cvData.title}</p>
            </div>
            <div className="flex space-x-4">
              <Button 
                variant={isEditing ? "destructive" : "outline"} 
                onClick={() => setIsEditing(!isEditing)}
              >
                {isEditing ? 'Lưu' : 'Chỉnh sửa'}
              </Button>
              <Button variant="outline">Tải CV</Button>
            </div>
          </div>
        </div>
      </header>

      {/* Navigation */}
      <nav className="bg-white shadow-sm sticky top-0 z-10">
        <div className="container mx-auto px-4">
          <div className="flex overflow-x-auto space-x-4 py-3">
            {['about', 'experience', 'education', 'skills', 'contact'].map((section) => (
              <button
                key={section}
                className={`px-4 py-2 rounded-lg whitespace-nowrap transition-colors ${
                  activeSection === section 
                    ? 'bg-blue-600 text-white' 
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
                onClick={() => setActiveSection(section)}
              >
                {section === 'about' && 'Giới thiệu'}
                {section === 'experience' && 'Kinh nghiệm'}
                {section === 'education' && 'Học vấn'}
                {section === 'skills' && 'Kỹ năng'}
                {section === 'contact' && 'Liên hệ'}
              </button>
            ))}
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-8">
        {/* About Section */}
        {activeSection === 'about' && (
          <div className="grid md:grid-cols-3 gap-8">
            <Card className="md:col-span-1">
              <CardHeader>
                <CardTitle>Ảnh cá nhân</CardTitle>
              </CardHeader>
              <CardContent className="flex justify-center">
                <img 
                  src="https://placeholder-image-service.onrender.com/image/300x300?prompt=Professional%20headshot%20of%20a%20Vietnamese%20software%20developer%20in%20business%20attire%20with%20confident%20smile%20and%20modern%20office%20background&id=edac351d-eb31-499d-aa40-d24309d2ccfc" 
                  alt="Professional headshot of a Vietnamese software developer in business attire with confident smile and modern office background"
                  className="w-48 h-48 rounded-full object-cover shadow-lg"
                />
              </CardContent>
            </Card>

            <Card className="md:col-span-2">
              <CardHeader>
                <CardTitle>Giới thiệu bản thân</CardTitle>
              </CardHeader>
              <CardContent>
                {isEditing ? (
                  <div className="space-y-4">
                    <div>
                      <Label htmlFor="summary">Mô tả bản thân</Label>
                      <Textarea
                        id="summary"
                        value={cvData.summary}
                        onChange={(e) => handleInputChange('summary', 'summary', e.target.value)}
                        rows={4}
                      />
                    </div>
                  </div>
                ) : (
                  <p className="text-gray-700 leading-relaxed">{cvData.summary}</p>
                )}
              </CardContent>
            </Card>
          </div>
        )}

        {/* Experience Section */}
        {activeSection === 'experience' && (
          <div className="space-y-6">
            {cvData.experience.map((exp, index) => (
              <Card key={index}>
                <CardHeader>
                  {isEditing ? (
                    <div className="space-y-3">
                      <Input
                        value={exp.company}
                        onChange={(e) => handleExperienceChange(index, 'company', e.target.value)}
                        placeholder="Tên công ty"
                      />
                      <div className="flex gap-4">
                        <Input
                          value={exp.position}
                          onChange={(e) => handleExperienceChange(index, 'position', e.target.value)}
                          placeholder="Vị trí"
                        />
                        <Input
                          value={exp.period}
                          onChange={(e) => handleExperienceChange(index, 'period', e.target.value)}
                          placeholder="Thời gian"
                        />
                      </div>
                    </div>
                  ) : (
                    <>
                      <CardTitle className="text-xl">{exp.company}</CardTitle>
                      <div className="flex justify-between items-center">
                        <span className="text-blue-600 font-medium">{exp.position}</span>
                        <span className="text-gray-500">{exp.period}</span>
                      </div>
                    </>
                  )}
                </CardHeader>
                <CardContent>
                  {isEditing ? (
                    <Textarea
                      value={exp.description}
                      onChange={(e) => handleExperienceChange(index, 'description', e.target.value)}
                      placeholder="Mô tả công việc"
                    />
                  ) : (
                    <p className="text-gray-700">{exp.description}</p>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        )}

        {/* Education Section */}
        {activeSection === 'education' && (
          <div className="space-y-6">
            {cvData.education.map((edu, index) => (
              <Card key={index}>
                <CardHeader>
                  <CardTitle className="text-xl">{edu.school}</CardTitle>
                  <div className="flex justify-between items-center">
                    <span className="text-blue-600 font-medium">{edu.degree}</span>
                    <span className="text-gray-500">{edu.period}</span>
                  </div>
                </CardHeader>
              </Card>
            ))}
          </div>
        )}

        {/* Skills Section */}
        {activeSection === 'skills' && (
          <Card>
            <CardHeader>
              <CardTitle>Kỹ năng chuyên môn</CardTitle>
            </CardHeader>
            <CardContent>
              {isEditing ? (
                <Textarea
                  value={cvData.skills.join(', ')}
                  onChange={(e) => handleInputChange('skills', 'skills', e.target.value)}
                  placeholder="Nhập kỹ năng, phân cách bằng dấu phẩy"
                />
              ) : (
                <div className="flex flex-wrap gap-2">
                  {cvData.skills.map((skill, index) => (
                    <span
                      key={index}
                      className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium"
                    >
                      {skill}
                    </span>
                  ))}
                </div>
              )}
            </CardContent>
          </Card>
        )}

        {/* Contact Section */}
        {activeSection === 'contact' && (
          <div className="grid md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Thông tin liên hệ</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <Label>Email</Label>
                  {isEditing ? (
                    <Input
                      value={cvData.email}
                      onChange={(e) => handleInputChange('email', 'email', e.target.value)}
                    />
                  ) : (
                    <p className="text-gray-700">{cvData.email}</p>
                  )}
                </div>
                <div>
                  <Label>Số điện thoại</Label>
                  {isEditing ? (
                    <Input
                      value={cvData.phone}
                      onChange={(e) => handleInputChange('phone', 'phone', e.target.value)}
                    />
                  ) : (
                    <p className="text-gray-700">{cvData.phone}</p>
                  )}
                </div>
                <div>
                  <Label>Địa chỉ</Label>
                  {isEditing ? (
                    <Input
                      value={cvData.location}
                      onChange={(e) => handleInputChange('location', 'location', e.target.value)}
                    />
                  ) : (
                    <p className="text-gray-700">{cvData.location}</p>
                  )}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Liên hệ ngay</CardTitle>
              </CardHeader>
              <CardContent>
                <form className="space-y-4">
                  <div>
                    <Label htmlFor="contact-name">Họ tên</Label>
                    <Input id="contact-name" placeholder="Nhập họ tên của bạn" />
                  </div>
                  <div>
                    <Label htmlFor="contact-email">Email</Label>
                    <Input id="contact-email" type="email" placeholder="Nhập email của bạn" />
                  </div>
                  <div>
                    <Label htmlFor="contact-message">Lời nhắn</Label>
                    <Textarea id="contact-message" placeholder="Nhập lời nhắn của bạn" rows={4} />
                  </div>
                  <Button type="submit" className="w-full">Gửi tin nhắn</Button>
                </form>
              </CardContent>
            </Card>
          </div>
        )}
      </main>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-8">
        <div className="container mx-auto px-4 text-center">
          <p>© 2024 {cvData.name}. All rights reserved.</p>
          <div className="flex justify-center space-x-4 mt-4">
            <Button variant="ghost" className="text-white">LinkedIn</Button>
            <Button variant="ghost" className="text-white">GitHub</Button>
            <Button variant="ghost" className="text-white">Facebook</Button>
          </div>
        </div>
      </footer>
    </div>
  );
}